{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":7,"numPassedTests":90,"numPendingTestSuites":0,"numPendingTests":2,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":7,"numTotalTests":92,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1741773721144,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["Plaid Client","getAccessToken"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client getAccessToken should return access token for valid credentials","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return access token for valid credentials"},{"ancestorTitles":["Plaid Client","getAccessToken"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client getAccessToken should return link token when no credentials exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return link token when no credentials exist"},{"ancestorTitles":["Plaid Client","getAccessToken"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client getAccessToken should return link token when credentials are malformed","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return link token when credentials are malformed"},{"ancestorTitles":["Plaid Client","createLinkToken"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client createLinkToken should create a link token successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should create a link token successfully"},{"ancestorTitles":["Plaid Client","createLinkToken"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client createLinkToken should throw AppError when link token creation fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should throw AppError when link token creation fails"},{"ancestorTitles":["Plaid Client","exchangePublicToken"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client exchangePublicToken should exchange public token for access token successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should exchange public token for access token successfully"},{"ancestorTitles":["Plaid Client","exchangePublicToken"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client exchangePublicToken should throw AppError when token exchange fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should throw AppError when token exchange fails"},{"ancestorTitles":["Plaid Client","PlaidClient initialization"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client PlaidClient initialization should throw error when environment variables are missing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error when environment variables are missing"},{"ancestorTitles":["Plaid Client","PlaidClient initialization"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client PlaidClient initialization should initialize with custom client if provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should initialize with custom client if provided"},{"ancestorTitles":["Plaid Client","fetchPlaidData"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client fetchPlaidData should successfully fetch Plaid data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should successfully fetch Plaid data"},{"ancestorTitles":["Plaid Client","fetchPlaidData"],"duration":1014,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client fetchPlaidData should handle rate limit errors with retries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle rate limit errors with retries"},{"ancestorTitles":["Plaid Client","fetchPlaidData"],"duration":2025,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client fetchPlaidData should throw AppError after max rate limit retries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should throw AppError after max rate limit retries"},{"ancestorTitles":["Plaid Client","fetchPlaidData"],"duration":1013,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client fetchPlaidData should handle authentication errors with token refresh","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle authentication errors with token refresh"},{"ancestorTitles":["Plaid Client","fetchPlaidData"],"duration":1015,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client fetchPlaidData should throw AppError after max auth retries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should throw AppError after max auth retries"},{"ancestorTitles":["Plaid Client","fetchPlaidData"],"duration":1008,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client fetchPlaidData should handle network errors with retry","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle network errors with retry"},{"ancestorTitles":["Plaid Client","fetchPlaidData"],"duration":1014,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client fetchPlaidData should throw AppError after max network retries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should throw AppError after max network retries"},{"ancestorTitles":["Plaid Client","fetchPlaidData"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client fetchPlaidData should throw AppError for other errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should throw AppError for other errors"},{"ancestorTitles":["Plaid Client","fetchPlaidData"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Plaid Client fetchPlaidData should throw AppError when no access token is available","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw AppError when no access token is available"}],"endTime":1741773730145,"message":"","name":"C:\\Users\\tomem\\Projects\\sibling-pds\\tests\\unit\\backend\\plaidClient.test.ts","startTime":1741773721213,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["User API"],"duration":129,"failureDetails":[],"failureMessages":[],"fullName":"User API should create a new user with POST /users using env key","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should create a new user with POST /users using env key"},{"ancestorTitles":["User API"],"duration":67,"failureDetails":[],"failureMessages":[],"fullName":"User API should create a new user with fallback key if env unset","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should create a new user with fallback key if env unset"},{"ancestorTitles":["User API"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"User API should return 400 for invalid user data with POST /users","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 400 for invalid user data with POST /users"},{"ancestorTitles":["User API"],"duration":80,"failureDetails":[],"failureMessages":[],"fullName":"User API should create volunteered data with POST /volunteered-data","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create volunteered data with POST /volunteered-data"},{"ancestorTitles":["User API"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"User API should return 400 for invalid volunteered data with POST /volunteered-data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 400 for invalid volunteered data with POST /volunteered-data"},{"ancestorTitles":["User API"],"duration":72,"failureDetails":[],"failureMessages":[],"fullName":"User API should create behavioral data with POST /behavioral-data","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create behavioral data with POST /behavioral-data"},{"ancestorTitles":["User API"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"User API should return 400 for invalid behavioral data with POST /behavioral-data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 400 for invalid behavioral data with POST /behavioral-data"},{"ancestorTitles":["User API"],"duration":74,"failureDetails":[],"failureMessages":[],"fullName":"User API should create external data with POST /external-data","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should create external data with POST /external-data"},{"ancestorTitles":["User API"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"User API should return 400 for invalid external data with POST /external-data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 400 for invalid external data with POST /external-data"},{"ancestorTitles":["User API"],"duration":109,"failureDetails":[],"failureMessages":[],"fullName":"User API should retrieve user data with GET /user-data/:id","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should retrieve user data with GET /user-data/:id"},{"ancestorTitles":["User API"],"duration":72,"failureDetails":[],"failureMessages":[],"fullName":"User API should return decrypted user data with GET /users/:id","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return decrypted user data with GET /users/:id"},{"ancestorTitles":["User API"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"User API should return 404 for non-existent user with GET /user-data/:id","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 404 for non-existent user with GET /user-data/:id"},{"ancestorTitles":["User API"],"duration":75,"failureDetails":[],"failureMessages":[],"fullName":"User API should update user data with PUT /users/:id","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"status":"passed","title":"should update user data with PUT /users/:id"},{"ancestorTitles":["User API"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"User API should return 404 for non-existent user with PUT /users/:id","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 404 for non-existent user with PUT /users/:id"},{"ancestorTitles":["User API"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"User API should return 400 for invalid data with PUT /users/:id","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 400 for invalid data with PUT /users/:id"},{"ancestorTitles":["User API"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"User API should return 404 for non-existent user with GET /users/:id","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return 404 for non-existent user with GET /users/:id"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":63,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should generate a JWT token with valid userId at POST /auth/login","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"status":"passed","title":"should generate a JWT token with valid userId at POST /auth/login"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should return 400 for missing userId at POST /auth/login","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 400 for missing userId at POST /auth/login"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should return 400 for empty userId at POST /auth/login","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return 400 for empty userId at POST /auth/login"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":5,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should allow access to protected route with valid token","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should allow access to protected route with valid token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should deny access to protected route with invalid token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should deny access to protected route with invalid token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should deny access to protected route with missing token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should deny access to protected route with missing token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should deny access to protected route with malformed token","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should deny access to protected route with malformed token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should accept valid input for /api/plaid/create-link-token","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should accept valid input for /api/plaid/create-link-token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should reject missing userId for /api/plaid/create-link-token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject missing userId for /api/plaid/create-link-token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":4,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should reject empty userId for /api/plaid/create-link-token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject empty userId for /api/plaid/create-link-token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":null,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should validate input for /api/plaid/exchange-public-token","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"pending","title":"should validate input for /api/plaid/exchange-public-token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should reject missing fields for /api/plaid/exchange-public-token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should reject missing fields for /api/plaid/exchange-public-token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":70,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should refresh access token with valid refresh token at POST /auth/refresh-token","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should refresh access token with valid refresh token at POST /auth/refresh-token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should return 401 for invalid refresh token at POST /auth/refresh-token","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 401 for invalid refresh token at POST /auth/refresh-token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should return 400 for missing refresh token at POST /auth/refresh-token","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 400 for missing refresh token at POST /auth/refresh-token"},{"ancestorTitles":["JWT Authentication and Validation"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"JWT Authentication and Validation should return 400 for empty refresh token at POST /auth/refresh-token","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should return 400 for empty refresh token at POST /auth/refresh-token"}],"endTime":1741773734498,"message":"","name":"C:\\Users\\tomem\\Projects\\sibling-pds\\tests\\unit\\backend\\api.test.ts","startTime":1741773730168,"status":"focused","summary":""},{"assertionResults":[{"ancestorTitles":["Gmail Client","getAccessToken"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client getAccessToken should return access token for valid credentials","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return access token for valid credentials"},{"ancestorTitles":["Gmail Client","getAccessToken"],"duration":15,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client getAccessToken should throw error for non-existent credentials","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error for non-existent credentials"},{"ancestorTitles":["Gmail Client","generateAuthUrl"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client generateAuthUrl should generate a valid authorization URL","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should generate a valid authorization URL"},{"ancestorTitles":["Gmail Client","generateAuthUrl"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client generateAuthUrl should include state parameter when provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should include state parameter when provided"},{"ancestorTitles":["Gmail Client","exchangeCodeForTokens"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client exchangeCodeForTokens should exchange authorization code for tokens","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should exchange authorization code for tokens"},{"ancestorTitles":["Gmail Client","exchangeCodeForTokens"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client exchangeCodeForTokens should throw error if tokens are incomplete","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw error if tokens are incomplete"},{"ancestorTitles":["Gmail Client","fetchGmailData"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client fetchGmailData should successfully fetch Gmail data","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should successfully fetch Gmail data"},{"ancestorTitles":["Gmail Client","fetchGmailData"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client fetchGmailData should handle rate limit errors with retries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle rate limit errors with retries"},{"ancestorTitles":["Gmail Client","fetchGmailData"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client fetchGmailData should handle auth errors by refreshing token","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle auth errors by refreshing token"},{"ancestorTitles":["Gmail Client","fetchGmailData"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client fetchGmailData should handle network errors with retry","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle network errors with retry"},{"ancestorTitles":["Gmail Client","fetchGmailData"],"duration":2014,"failureDetails":[],"failureMessages":[],"fullName":"Gmail Client fetchGmailData should throw AppError after max retries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should throw AppError after max retries"}],"endTime":1741773737569,"message":"","name":"C:\\Users\\tomem\\Projects\\sibling-pds\\tests\\unit\\backend\\gmailClient.test.ts","startTime":1741773734518,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Users Controller","createUser"],"duration":74,"failureDetails":[],"failureMessages":[],"fullName":"Users Controller createUser should create a new user with valid data","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should create a new user with valid data"},{"ancestorTitles":["Users Controller","createUser"],"duration":12,"failureDetails":[],"failureMessages":[],"fullName":"Users Controller createUser should throw AppError when name is missing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw AppError when name is missing"},{"ancestorTitles":["Users Controller","createUser"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Users Controller createUser should throw AppError when email is missing","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw AppError when email is missing"},{"ancestorTitles":["Users Controller","getUser"],"duration":69,"failureDetails":[],"failureMessages":[],"fullName":"Users Controller getUser should return decrypted user data for valid ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should return decrypted user data for valid ID"},{"ancestorTitles":["Users Controller","getUser"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Users Controller getUser should throw AppError for non-existent user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw AppError for non-existent user"},{"ancestorTitles":["Users Controller","updateUser"],"duration":70,"failureDetails":[],"failureMessages":[],"fullName":"Users Controller updateUser should update user data with valid input","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"status":"passed","title":"should update user data with valid input"},{"ancestorTitles":["Users Controller","updateUser"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"Users Controller updateUser should throw AppError when updating non-existent user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw AppError when updating non-existent user"},{"ancestorTitles":["Users Controller","updateUser"],"duration":60,"failureDetails":[],"failureMessages":[],"fullName":"Users Controller updateUser should throw AppError when update data is invalid","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw AppError when update data is invalid"}],"endTime":1741773738823,"message":"","name":"C:\\Users\\tomem\\Projects\\sibling-pds\\tests\\unit\\backend\\usersController.test.ts","startTime":1741773737589,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["UserDataSources Model","Storing credentials"],"duration":26,"failureDetails":[],"failureMessages":[],"fullName":"UserDataSources Model Storing credentials should store encrypted credentials","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should store encrypted credentials"},{"ancestorTitles":["UserDataSources Model","Storing credentials"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"UserDataSources Model Storing credentials should update existing credentials","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should update existing credentials"},{"ancestorTitles":["UserDataSources Model","Storing credentials"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"UserDataSources Model Storing credentials should enforce unique userId and dataSourceType combination","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should enforce unique userId and dataSourceType combination"},{"ancestorTitles":["UserDataSources Model","Retrieving credentials"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"UserDataSources Model Retrieving credentials should retrieve and decrypt credentials","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should retrieve and decrypt credentials"},{"ancestorTitles":["UserDataSources Model","Retrieving credentials"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"UserDataSources Model Retrieving credentials should return null for non-existent credentials","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should return null for non-existent credentials"},{"ancestorTitles":["UserDataSources Model","Data source types"],"duration":14,"failureDetails":[],"failureMessages":[],"fullName":"UserDataSources Model Data source types should validate data source types","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should validate data source types"},{"ancestorTitles":["UserDataSources Model","Data source types"],"duration":13,"failureDetails":[],"failureMessages":[],"fullName":"UserDataSources Model Data source types should store credentials for different data sources","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should store credentials for different data sources"}],"endTime":1741773739830,"message":"","name":"C:\\Users\\tomem\\Projects\\sibling-pds\\tests\\unit\\backend\\userDataSources.test.ts","startTime":1741773738844,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Scheduler","startScheduler"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler startScheduler should initialize cron with the correct schedule","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should initialize cron with the correct schedule"},{"ancestorTitles":["Scheduler","startScheduler"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler startScheduler should use custom schedule if provided","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should use custom schedule if provided"},{"ancestorTitles":["Scheduler","startScheduler"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler startScheduler should not start scheduler if disabled","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should not start scheduler if disabled"},{"ancestorTitles":["Scheduler","runDataIngestion"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler runDataIngestion should fetch users with Gmail and Plaid data sources","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should fetch users with Gmail and Plaid data sources"},{"ancestorTitles":["Scheduler","runDataIngestion"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler runDataIngestion should fetch Gmail data for each Gmail user","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"status":"passed","title":"should fetch Gmail data for each Gmail user"},{"ancestorTitles":["Scheduler","runDataIngestion"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler runDataIngestion should fetch Plaid data for each Plaid user","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should fetch Plaid data for each Plaid user"},{"ancestorTitles":["Scheduler","runDataIngestion"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler runDataIngestion should handle Gmail fetch errors gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle Gmail fetch errors gracefully"},{"ancestorTitles":["Scheduler","runDataIngestion"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler runDataIngestion should handle Plaid fetch errors gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle Plaid fetch errors gracefully"},{"ancestorTitles":["Scheduler","runDataIngestion"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler runDataIngestion should handle authentication errors specially","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle authentication errors specially"},{"ancestorTitles":["Scheduler","runDataIngestion"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Scheduler runDataIngestion should handle errors in getUsersWithDataSource gracefully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle errors in getUsersWithDataSource gracefully"}],"endTime":1741773740730,"message":"","name":"C:\\Users\\tomem\\Projects\\sibling-pds\\tests\\unit\\backend\\scheduler.test.ts","startTime":1741773739849,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Error Handler Middleware"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"Error Handler Middleware should handle AppError with custom status code","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle AppError with custom status code"},{"ancestorTitles":["Error Handler Middleware"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error Handler Middleware should handle AppError with 404 status","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle AppError with 404 status"},{"ancestorTitles":["Error Handler Middleware"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error Handler Middleware should handle unknown errors with 500 status","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle unknown errors with 500 status"},{"ancestorTitles":["Error Handler Middleware"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error Handler Middleware should handle validation errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should handle validation errors"},{"ancestorTitles":["Error Handler Middleware","AppError class"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"Error Handler Middleware AppError class should create an error with custom message and status code","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should create an error with custom message and status code"},{"ancestorTitles":["Error Handler Middleware","AppError class"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"Error Handler Middleware AppError class should default to 500 status code if not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should default to 500 status code if not provided"}],"endTime":1741773740849,"message":"","name":"C:\\Users\\tomem\\Projects\\sibling-pds\\tests\\unit\\backend\\errorHandler.test.ts","startTime":1741773740750,"status":"passed","summary":""}],"wasInterrupted":false}
